### Outras formas de adicionar registros

    firebase
        .database()
        .ref('users')
        .child(uid)
        .[metodo_abaixo]({});

#### set
>`set` aonde está `[metodo_abaixo]`: Sempre faz a escrita dos dados, ou seja esse método faz a sobreescrita se existir e cria se não existir. O seu efeito será sentido imediatamente e poderá ser percebido pelo evento (`value`,`child_added`,etc...), que será disparado. A sincronização com os servidores do firebase, serão imediatamente dispados, o que poderá resultar em uma promise quando completado `onComplete` abaixo. Se for passado como argumento um valor nulo, o elemento será excluído.

###### Assinatura
    set ( value :  any ,  onComplete ? :  ( a :  Error | null ) => any ) : Promise < any >

[Documentação](https://firebase.google.com/docs/reference/js/firebase.database.Reference#set)

#### transaction
>`transaction` aonde está `[metodo_abaixo]`: Use em transações para trabalhar com dados complexos que poderiam ser corrompidos por atualizações simultâneas. Ele modifica de maneira atômica os dados, garantindo assim a consistência, ou seja se você precisa alterar dois campos, ou ele irá alterar os dois campos de uma vez, ou não irá alterar nenhum, ou seja nesse caso não existiria a possibilidade de um campo ser alterado e outro não, esse método é recomendado para alterações mais complexas.

###### Assinatura
    transaction ( transactionUpdate :  ( a :  any ) => any ,  onComplete ? :  ( a :  Error | null ,  b :  boolean ,  c :  DataSnapshot | null ) => any ,  applyLocally ? :  boolean ) : Promise < any >

[Documentação](https://firebase.google.com/docs/reference/js/firebase.database.Reference#transaction)
